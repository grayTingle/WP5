/**make a placeholder for an explicit grid based on areas*/
body {
  display: -ms-grid;
  display: grid;
  width: 98%;
      grid-template-areas: "area1 area2" "area3 area4" "area5 area6" "area7 area8";
  -ms-grid-columns: 47% 47%;
      grid-template-columns: 47% 47%;
  -ms-grid-rows: auto;
      grid-template-rows: auto;
  gap: 5%;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area1 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  grid-area: area1;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area2 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 1;
  -ms-grid-column: 2;
  grid-area: area2;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area3 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 2;
  -ms-grid-column: 1;
  grid-area: area3;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area4 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 2;
  -ms-grid-column: 2;
  grid-area: area4;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area5 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 3;
  -ms-grid-column: 1;
  grid-area: area5;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area6 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 3;
  -ms-grid-column: 2;
  grid-area: area6;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area7 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 4;
  -ms-grid-column: 1;
  grid-area: area7;
}

/** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
/**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
/**tldr i have no idea*/
.area8 {
  /**so anything you put in here will be applied to every grid area*/
  -ms-grid-row: 4;
  -ms-grid-column: 2;
  grid-area: area8;
}

/**this is for making it work on mobile, since instead of squishing it all interpolates*/
@media all and (max-width: 700px) {
  body {
        grid-template-areas: "area1" "area2" "area3" "area4" "area5" "area6" "area7" "area8";
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area1 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 1;
    -ms-grid-column: 1;
    grid-area: area1;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area2 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 2;
    -ms-grid-column: 1;
    grid-area: area2;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area3 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 3;
    -ms-grid-column: 1;
    grid-area: area3;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area4 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 4;
    -ms-grid-column: 1;
    grid-area: area4;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area5 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 5;
    -ms-grid-column: 1;
    grid-area: area5;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area6 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 6;
    -ms-grid-column: 1;
    grid-area: area6;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area7 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 7;
    -ms-grid-column: 1;
    grid-area: area7;
  }
  /** making namearea so we have a variable, then area bc it's the name and plus $i bc we've established that $i is one through eight*/
  /**so it's area number $i (which is one through eight,) then the area is namearea which we've named after area and its corresponding number*/
  /**tldr i have no idea*/
  .area8 {
    /**so anything you put in here will be applied to every grid area*/
    -ms-grid-row: 8;
    -ms-grid-column: 1;
    grid-area: area8;
  }
}

.bigpic img {
  width: 100%;
}

.smallgrid {
  display: -ms-grid;
  display: grid;
  width: 100%;
  padding: 1%;
  gap: 5px;
  -ms-grid-columns: (minmax(150px, 1fr))[auto-fit];
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

.smallgrid img {
  width: 150px;
  -webkit-transition: -webkit-transform .2s all ease-in-out;
  transition: -webkit-transform .2s all ease-in-out;
  transition: transform .2s all ease-in-out;
  transition: transform .2s all ease-in-out, -webkit-transform .2s all ease-in-out;
}

.smallgrid img :hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}

.contactbutton {
  list-style: none;
  color: #54547e;
  margin: 2%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 4%;
}

.contactbutton li {
  list-style: none;
  color: #54547e;
  border: none;
  margin: 2%;
}

.contactbutton span {
  color: blue;
  margin: 2%;
  -webkit-transition: background-color ease-in-out 200ms;
  transition: background-color ease-in-out 200ms;
}

.buttonwords {
  list-style: none;
  color: #54547e;
  margin: 2%;
}

.buttonwords li {
  list-style: none;
  color: #54547e;
  border: none;
  margin: 2%;
}

.buttonwords p {
  display: inline;
  margin: 4%;
}

.buttonwords span {
  color: blue;
  margin: 2%;
  -webkit-transition: background-color ease-in-out 200ms;
  transition: background-color ease-in-out 200ms;
}

.goto {
  text-decoration: none;
  text-align: center;
}

button {
  border: none;
  background-color: #ececf5;
  -webkit-transition: all 200ms ease-in-out;
  transition: all 200ms ease-in-out;
}

button:hover {
  -webkit-animation: anim 600ms ease-in-out;
          animation: anim 600ms ease-in-out;
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
}

@-webkit-keyframes anim {
  0% {
  }
  100% {
  }
}

@keyframes anim {
  0% {
  }
  100% {
  }
}

h1, h2 {
  text-align: center;
  color: #45455b;
  font-family: fantasy;
}

p {
  color: #43435c;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  margin: 5%;
}

label {
  color: #43435c;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  margin: 5%;
}

section {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.pics {
  -webkit-transition: -webkit-transform .2s;
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s;
}

.picshover {
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}

body {
  background-color: #adadb5;
}
/*# sourceMappingURL=princ.css.map */